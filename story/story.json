/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
async function initMap() {
  // Request needed libraries.
  const {
    Map
  } = await google.maps.importLibrary("maps");
  const {
    AdvancedMarkerElement,
    PinElement
  } = await google.maps.importLibrary(
    "marker",
  );
  const {
    Place
  } = await google.maps.importLibrary("places");
  const map = new Map(document.getElementById("map"), {
    center: {
      lat: 45.9701,
      lng: -81.5080
    },
    zoom: 15,
    mapId: "4504f8b37365c3d0",
  });
  const parser = new DOMParser();
  // A marker with a custom inline SVG.
  const pinSvgString =
    <svg xmlns="http://www.w3.org/2000/svg"  width="30px" height="30px" viewBox="60 70 70 70">
    <ellipse cx="91.47" cy="103.854" fill="#fff" stroke="#c90807" stroke-width="2.765" rx="26.458" ry="26.08" />
    <path fill="#c90807" d="M88.461 85.05h6.147v26.707h-6.147zm0 30.014h6.147v5.622h-6.147z" />
</svg>;
const pinSvg = parser.parseFromString(
    pinSvgString,
    "image/svg+xml",
  ).documentElement;
  const pinSvgMarkerView = new AdvancedMarkerElement({
    map,
    position: {
      lat: 45.97053711163098,
      lng: -81.50328990980692
    },
    content: pinSvg,
    title: "A marker using a custom SVG image.",
  });
  // A marker with a with a URL pointing to a PNG.
  const dinnerplateImg = document.createElement("img");

  dinnerplateImg.src =
    "dinner.jpg";

  const dinnerplateMarkerView = new AdvancedMarkerElement({
    map,
    position: {
      lat: 45.971284876286475,
      lng: -81.51550012822338
    },
    content: dinnerplateImg,
    title: "A marker using a custom PNG Image",
  });
  // A marker with a custom SVG glyph.
  const glyphImg = document.createElement('img');
    glyphImg.src = 'hotel.svg';

  const glyphSvgPinElement = new PinElement({
    glyph: glyphImg,
  });
  const glyphSvgMarkerView = new AdvancedMarkerElement({
    map,
    position: {
      lat: 45.970074027456945,
      lng: -81.50804157729885
    },
    content: glyphSvgPinElement.element,
    title: "A marker using a custom SVG for the glyph.",
  });
  // A marker customized using a place icon and color, name, and geometry.
  const place = new Place({
    id: "ChIJN5Nz71W3j4ARhx5bwpTQEGg",
  });

  // Call fetchFields, passing the desired data fields.
  await place.fetchFields({
    fields: [
      "location",
      "displayName",
      "svgIconMaskURI",
      "iconBackgroundColor",
    ],
  });

  const pinElement = new PinElement({
    background: place.iconBackgroundColor,
    glyph: new URL(String(place.svgIconMaskURI)),
  });
  const placeIconMarkerView = new AdvancedMarkerElement({
    map,
    position: place.location,
    content: pinElement.element,
    title: place.displayName,
  });
  // A marker using a Font Awesome icon for the glyph.
  const icon = document.createElement("div");

  icon.innerHTML = '<i class="fa fa-mountain fa-lg"</i>';

  const faPin = new PinElement({
    glyph: icon,
    glyphColor: "#c1d8f0",
    background: "#4663ac",
    borderColor: "##4a5778",
  });
  const faMarker = new AdvancedMarkerElement({
    map,
    position: {
      lat: 45.96857337410628,
      lng: -81.48900853545217
    },
    content: faPin.element,
    title: "A marker using a FontAwesome icon for the glyph.",
  });
}

initMap();
